<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Matplotlib使用教程(一)：图像创建与保存</title>
      <link href="/2020/09/08/Matplotlib-%E5%9B%BE%E5%83%8F%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BF%9D%E5%AD%98/"/>
      <url>/2020/09/08/Matplotlib-%E5%9B%BE%E5%83%8F%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BF%9D%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h2 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><h2 id="创建一个简单图像"><a href="#创建一个简单图像" class="headerlink" title="创建一个简单图像"></a>创建一个简单图像</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line"><span class="comment"># 接下来直接绘图即可</span></span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="comment"># 调用show方法显示</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="1.png"><br>还可设置图像分辨率与图像大小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(dpi=<span class="number">800</span>, figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h2 id="创建多图像"><a href="#创建多图像" class="headerlink" title="创建多图像"></a>创建多图像</h2><p>方法一：subplot创建子图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plt.subplot(row_num, column_num, index)</span></span><br><span class="line"><span class="comment"># 三个参数分别代表总行数，总列数，和接下来想要绘图的子图位置索引(从左到右，从上到下，从1开始标号)</span></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><img src="2.png"><br>方法二：plt.subplots创建子图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fig, axes = plt.subplots(row_num, column_num)</span><br><span class="line"><span class="comment"># 该方法一次性创建指定数量的子图，若想在某个子图上绘图，直接通过axes[i, j]索引指定</span></span><br><span class="line">fig, axes = subplots(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">0</span>].plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">1</span>].plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">0</span>].plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">1</span>].plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>])</span><br></pre></td></tr></table></figure><p><img src="3.png"></p><h2 id="保存图像"><a href="#保存图像" class="headerlink" title="保存图像"></a>保存图像</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(<span class="string">&#x27;1.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 也可以在保存的时候指定分辨率</span></span><br><span class="line">plt.savefig(<span class="string">&#x27;1.png&#x27;</span>, dpi=<span class="number">300</span>)</span><br></pre></td></tr></table></figure><p><strong>注意：savefig一定要在plt.show()之前调用，否则会保存空白图片</strong></p>]]></content>
      
      
      <categories>
          
          <category> python常用库 </category>
          
          <category> Matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib使用教程(二)：基本绘图</title>
      <link href="/2020/09/08/Matplotlib-%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/"/>
      <url>/2020/09/08/Matplotlib-%E5%9F%BA%E6%9C%AC%E7%BB%98%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="绘制线条"><a href="#绘制线条" class="headerlink" title="绘制线条"></a>绘制线条</h2><p>最基本的绘图为线条的绘制，调用plt.plot方法即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plt.plot(x_list, y_list)， x_list为x轴取值列表， y_list为y轴取值列表，列表中的元素一一对应。</span></span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>plt.plot也有一些额外的修饰参数，包括：<strong>c(color)**，</strong>ls(linestyle)<strong>，</strong>lw(linewidth)<strong>，</strong>marker**</p><blockquote><p><strong>color参数可选项：</strong>[<a href="https://blog.csdn.net/mmc2015/article/details/72829107]">https://blog.csdn.net/mmc2015/article/details/72829107]</a>(https:// blog.csdn.net/mmc2015/article/details/72829107 “color参数”)</p></blockquote><blockquote><p><strong>linestyle参数可选项：</strong><br>‘-‘       solid line style<br>‘–’      dashed line style<br>‘-.’      dash-dot line style<br>‘:’       dotted line style</p></blockquote><blockquote><p><strong>linewidth：</strong>直接输入一个正数值即可</p></blockquote><blockquote><p><strong>marker参数可选项：</strong><br>‘.’       point marker<br>‘,’       pixel marker<br>‘o’       circle marker<br>‘v’       triangle_down marker<br>‘^’       triangle_up marker<br>‘&lt;’       triangle_left marker<br>‘&gt;’       triangle_right marker<br>‘1’       tri_down marker<br>‘2’       tri_up marker<br>‘3’       tri_left marker<br>‘4’       tri_right marker<br>‘s’       square marker<br>‘p’       pentagon marker<br>‘*’       star marker<br>‘h’       hexagon1 marker<br>‘H’       hexagon2 marker<br>‘+’       plus marker<br>‘x’       x marker<br>‘D’       diamond marker<br>‘d’       thin_diamond marker<br>‘|’       vline marker<br>‘_’       hline marker</p></blockquote><p>调用时也可以组合参数，比如我们需要<strong>绿色</strong>、<strong>dashed line</strong>、<strong>o型标记</strong>，即可传参’go–’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], <span class="string">&#x27;go--&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="1.png"></p><h2 id="绘制散点图"><a href="#绘制散点图" class="headerlink" title="绘制散点图"></a>绘制散点图</h2><p>绘制散点图的传参与绘制线图基本一致，调用plt.scatter方法即可，只不过显示出来为散点，并且多了一个<strong>s</strong>参数可以设置点的粗细</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">100</span></span><br><span class="line">X = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, n)</span><br><span class="line">Y = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, n)</span><br><span class="line">T = np.arctan2(Y,X) <span class="comment"># color value</span></span><br><span class="line">plt.scatter(X, Y, c=T, s=<span class="number">15</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="2.png"></p><h2 id="绘制条形图"><a href="#绘制条形图" class="headerlink" title="绘制条形图"></a>绘制条形图</h2><p>绘制条形图调用plt.bar方法，上面两种绘图不同的是，设置颜色要用fc(facecolor)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.bar([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>], fc=<span class="string">&#x27;#9999ff&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;3.png&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="3.png"></p>]]></content>
      
      
      <categories>
          
          <category> python常用库 </category>
          
          <category> Matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib使用教程(四)：标注与图例</title>
      <link href="/2020/09/08/Matplotlib-%E6%A0%87%E6%B3%A8%E4%B8%8E%E5%9B%BE%E4%BE%8B/"/>
      <url>/2020/09/08/Matplotlib-%E6%A0%87%E6%B3%A8%E4%B8%8E%E5%9B%BE%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="text标注"><a href="#text标注" class="headerlink" title="text标注"></a>text标注</h2><p>text用于直接在图像中的任意位置进行标注，传入参数包括：<strong>x</strong>，<strong>y</strong>，<strong>s</strong>，<strong>fontsize</strong>，<strong>fontstyle</strong>，<strong>fontweight</strong></p><blockquote><p><strong>x</strong>为横坐标<br><strong>y</strong>为纵坐标<br><strong>s</strong>为标注字符串<br><strong>fontsize/fontstyle/fontweight</strong>为字体设置</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">X = np.linspace(<span class="number">-5</span>, <span class="number">5</span>)</span><br><span class="line">y = np.sin(X)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(X, y)</span><br><span class="line"></span><br><span class="line">plt.text(x=<span class="number">3.14</span> / <span class="number">2</span>, y=<span class="number">1</span>, s=<span class="string">&#x27;Max&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="1.png"></p><h2 id="annotate标注"><a href="#annotate标注" class="headerlink" title="annotate标注"></a>annotate标注</h2><p>annotate用于给图像中的某个点进行标注，调用plt.annotate方法即可，传入参数包括：<strong>s</strong>，<strong>xy</strong>，<strong>xytext</strong>，<strong>textcoords</strong>，<strong>fontsize</strong>，<strong>fontstyle</strong>，<strong>fontweight</strong></p><blockquote><p><strong>s</strong>为标注字符串<br><strong>xy</strong>为被标注点位置坐标<br><strong>xytext</strong>为标注文字的坐标(一般与textcoords=’offset points’连用，此时坐标为相对于xy的偏移值)<br><strong>textcoords</strong>一般传入’offset points’<br><strong>fontsize/fontstyle/fontweight</strong>为字体设置</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">X = np.linspace(<span class="number">-5</span>, <span class="number">5</span>)</span><br><span class="line">y = np.sin(X)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(X, y)</span><br><span class="line"></span><br><span class="line">plt.annotate(s=<span class="string">&#x27;Max&#x27;</span>, xy=(<span class="number">3.14</span> / <span class="number">2</span>, <span class="number">1</span>), xytext=(<span class="number">0</span>, <span class="number">0.1</span>), textcoords=<span class="string">&#x27;offset points&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="1.png"></p><h2 id="添加图例"><a href="#添加图例" class="headerlink" title="添加图例"></a>添加图例</h2><p>调用plt.legend方法即可给一张figure中的不同曲线添加图例标注，直接传入一个图例名称列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">X = np.linspace(<span class="number">-5</span>, <span class="number">5</span>)</span><br><span class="line">y1 = np.sin(X)</span><br><span class="line">y2 = np.cos(X)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(X, y1)</span><br><span class="line">plt.plot(X, y2)</span><br><span class="line"></span><br><span class="line">plt.legend([<span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="2.png"></p>]]></content>
      
      
      <categories>
          
          <category> python常用库 </category>
          
          <category> Matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib使用教程(三)：设置坐标轴</title>
      <link href="/2020/09/08/Matplotlib-%E8%AE%BE%E7%BD%AE%E5%9D%90%E6%A0%87%E8%BD%B4/"/>
      <url>/2020/09/08/Matplotlib-%E8%AE%BE%E7%BD%AE%E5%9D%90%E6%A0%87%E8%BD%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="设置坐标轴区间"><a href="#设置坐标轴区间" class="headerlink" title="设置坐标轴区间"></a>设置坐标轴区间</h2><p>调用plt.xlim与plt.ylim，传入坐标区间元组，即可分别设置x轴与y轴的取值范围</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">100</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.xlim((<span class="number">-10</span>, <span class="number">10</span>)) <span class="comment">#设置x轴的取值范围为[-10, 10]</span></span><br><span class="line">plt.ylim((<span class="number">-2</span>, <span class="number">2</span>)) <span class="comment">#设置y轴的取值范围为[-2, 2]</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="1.png"></p><h2 id="设置坐标轴名称"><a href="#设置坐标轴名称" class="headerlink" title="设置坐标轴名称"></a>设置坐标轴名称</h2><p>调用plt.xlabel与plt.ylabel，传入字符串，即可分别设置x轴与y轴的名称<br>除名称字符串外，可选参数包括: <strong>fontsize</strong>，<strong>fontweight</strong>，<strong>fontstyle</strong>，<strong>c(color)</strong></p><blockquote><p><strong>fontsize</strong>设置字体大小，取值为正数<br><strong>fontweight</strong>设置字体粗细，可选参数 [‘light’, ‘normal’, ‘medium’, ‘semibold’, ‘bold’, ‘heavy’, ‘black’]<br><strong>fontstyle</strong>设置字体样式，可选参数[ ‘normal’ | ‘italic’ | ‘oblique’ ]，italic斜体，oblique倾斜<br><strong>color</strong>设置字体颜色</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">100</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlim((<span class="number">-10</span>, <span class="number">10</span>)</span><br><span class="line">plt.ylim((<span class="number">-2</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&#x27;value of x&#x27;</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>, fontstyle=<span class="string">&#x27;italic&#x27;</span>, c=<span class="string">&#x27;g&#x27;</span>) <span class="comment"># 字号15，加粗，斜体，绿色</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;value of y&#x27;</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>, fontstyle=<span class="string">&#x27;italic&#x27;</span>, c=<span class="string">&#x27;g&#x27;</span>) <span class="comment"># 字号15，加粗，斜体，绿色</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="2.png"></p><h2 id="设置坐标轴刻度"><a href="#设置坐标轴刻度" class="headerlink" title="设置坐标轴刻度"></a>设置坐标轴刻度</h2><p>调用plt.xticks，plt.yticks，传入刻度值列表，即可分别设置x轴与y轴刻度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">100</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>, <span class="number">5</span>))</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.xlim((<span class="number">-10</span>, <span class="number">10</span>))</span><br><span class="line">plt.ylim((<span class="number">-2</span>, <span class="number">2</span>))</span><br><span class="line">plt.xticks(np.arange(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">0.5</span>))</span><br><span class="line">plt.yticks(np.arange(<span class="number">-2</span>, <span class="number">2</span>, <span class="number">0.5</span>))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="3.png"></p>]]></content>
      
      
      <categories>
          
          <category> python常用库 </category>
          
          <category> Matplotlib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/09/08/hello-world/"/>
      <url>/2020/09/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
